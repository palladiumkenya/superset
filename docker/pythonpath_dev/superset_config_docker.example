# Dummy config file with sample configs for OIDC, email

import os
from flask_appbuilder.security.manager import AUTH_DB, AUTH_OID
from customSecurity import OIDCSecurityManager

curr  =  os.path.abspath(os.getcwd())
# AUTHENTICATION
AUTH_TYPE = AUTH_OID
OIDC_CLIENT_SECRETS= curr+ '/docker/pythonpath_dev/client_secret.example.json'
OIDC_ID_TOKEN_COOKIE_SECURE = False
OIDC_REQUIRE_VERIFIED_EMAIL = False
OIDC_CLOCK_SKEW = 560
OIDC_VALID_ISSUERS = 'http://auth.superset.org/superset'
AUTH_USER_REGISTRATION = False
AUTH_USER_REGISTRATION_ROLE = 'Gamma'
CUSTOM_SECURITY_MANAGER = OIDCSecurityManager
OIDC_INTROSPECTION_AUTH_METHOD = 'client_secret_post'
OIDC_TOKEN_TYPE_HINT = 'access_token'

FAB_API_SWAGGER_UI=True

APP_ICON = "/static/assets/images/logo.png"

PREVIOUS_SECRET_KEY='SOME_PREVIOUS_KEY'
SECRET_KEY='SOME_STRONG_KEY'

# EMAIL CONFIGURATION
ALERT_REPORTS = True
ALERT_REPORTS_NOTIFICATION_DRY_RUN = False
EMAIL_NOTIFICATIONS = True  # all the emails are sent using dryrun
SMTP_HOST = "smtp.mailgun.org"
SMTP_STARTTLS = True
SMTP_SSL = False
SMTP_USER = "dummy-user@mg.superset.org"
SMTP_PORT = 587
SMTP_PASSWORD = "dee23bec-8298-4874-adf5-e8f4d8257e01"
SMTP_MAIL_FROM = "dummy-superset@mg.kenyahmis.org"
# If True creates a default SSL context with ssl.Purpose.CLIENT_AUTH using the
# default system root CA certificates.
SMTP_SSL_SERVER_AUTH = False
ENABLE_CHUNK_ENCODING = False

# reports
WEBDRIVER_TYPE = "chrome"
WEBDRIVER_OPTION_ARGS = [
    "--force-device-scale-factor=2.0",
    "--high-dpi-support=2.0",
    "--headless",
    "--disable-gpu",
    "--disable-dev-shm-usage",
    "--no-sandbox",
    "--disable-setuid-sandbox",
    "--disable-extensions",
]